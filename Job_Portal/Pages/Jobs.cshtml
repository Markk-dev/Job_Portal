@page
@model Job_Portal.Pages.JobsModel
@{
    ViewData["Title"] = "Jobs";
}
<head>
    <link rel="stylesheet" href="~/css/job.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/global.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>

<div class="jobs-container">
    <div class="search-container">
        <div class="search-box">
            <i class="search-icon">🔍</i>
            <input type="text" placeholder="Find your perfect job" />
        </div>
    </div>


    <div class="jobs-content">

        <div class="job-listings">
            @foreach (var job in Model.Jobs)
            {
                <div class="job-card @(job.IsSelected ? "selected" : "")">
                    <div class="job-info">
                        <div class="company-name">@job.CompanyName</div>
                        <h2 class="job-title">@job.Title</h2>
                        <div class="job-location">@job.Location</div>
                        <div class="job-salary">$@job.MinSalary.ToString("N0") - $@job.MaxSalary.ToString("N0")</div>
                    </div>
                    <div class="job-actions">
                        <a asp-page-handler="SelectJob" asp-route-jobId="@job.Id" class="select-job-link">
                            <div class="job-card-inner"></div>
                        </a>
                        <button type="button" class="easy-apply-btn" onclick="openJobModal(@job.Id, '@job.CompanyName', '@job.Title', '@job.Overview', @job.MinSalary, @job.MaxSalary)">
                            <i class="apply-icon">✓</i> Select
                        </button>
                    </div>
                </div>
            }
        </div>


        <div class="job-details">
            @if (Model.SelectedJob != null)
            {
                <div class="job-header">
                    <div class="job-header-info">
                        <div class="company-name">@Model.SelectedJob.CompanyName</div>
                        <h1 class="job-title">@Model.SelectedJob.Title</h1>
                        <div class="job-location">@Model.SelectedJob.Location</div>
                    </div>
                    <div class="job-header-actions">
                        <button class="action-btn">
                            <i class="more-icon">⋯</i>
                        </button>
                        <button class="action-btn">
                            <i class="save-icon">🔖</i>
                        </button>
                        <button type="button" class="easy-apply-btn" onclick="openJobModal(@Model.SelectedJob.Id, '@Model.SelectedJob.CompanyName', '@Model.SelectedJob.Title', '@Model.SelectedJob.Overview', @Model.SelectedJob.MinSalary, @Model.SelectedJob.MaxSalary)">
                            <i class="apply-icon">✓</i> Easy Apply
                        </button>
                    </div>
                </div>

                <div class="job-section">
                    <h3 class="section-title">Overview</h3>
                    <p class="job-overview">
                        @Model.SelectedJob.Overview
                    </p>
                </div>

                <div class="job-section">
                    <h3 class="section-title">Base pay range</h3>
                    <div class="salary-range">
                        <div class="salary-amount">$@Model.SelectedJob.MinSalary.ToString("N0") — $@Model.SelectedJob.MaxSalary.ToString("N0") <span class="salary-period">(Estimated)</span></div>
                        <div class="salary-info">Base salary range</div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="jobModal" class="modal">
        <div class="modal-content">
            <span class="close-button" onclick="closeJobModal()">&times;</span>

            <div class="modal-job-header">
                <div class="company-name" id="modalCompanyName"></div>
                <h1 class="job-title" id="modalJobTitle"></h1>
            </div>

            <div class="modal-job-description" id="modalJobDescription"></div>

            <div class="modal-job-salary">
                <h3 class="section-title">Base pay range</h3>
                <div class="salary-amount" id="modalSalaryRange"></div>
                <div class="salary-info">Base salary range</div>
            </div>

            <div class="modal-actions">
                <button class="action-btn">
                    <i class="more-icon">⋯</i>
                </button>
                <button class="action-btn">
                    <i class="save-icon">🔖</i>
                </button>
                <form method="post" id="applyForm" asp-page-handler="Apply">
                    <input type="hidden" id="jobIdInput" name="jobId" value="" />
                    <button type="submit" class="easy-apply-btn">
                        <i class="apply-icon">✓</i> Easy Apply
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="toast" class="hidden toast-success">
    <div class="toast-icon">
        <svg width="32" height="32" fill="none" viewBox="0 0 24 24"><rect width="24" height="24" rx="6" fill="#4CAF50" fill-opacity="0.15"/><path d="M8 12.5l3 3 5-5" stroke="#4CAF50" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><rect x="3" y="3" width="18" height="18" rx="5" stroke="#4CAF50" stroke-width="2"/></svg>
    </div>
    <div>
        <div class="toast-title" id="toast-title">Success</div>
        <div class="toast-message" id="toast-message"></div>
    </div>
    <button onclick="hideToast()" class="toast-close">&times;</button>
</div>



<script>
    
    function openJobModal(jobId, companyName, jobTitle, jobOverview, minSalary, maxSalary) {
        event.preventDefault();
        event.stopPropagation();

        // For Modal
        var modal = document.getElementById('jobModal');


        document.getElementById('modalCompanyName').textContent = companyName;
        document.getElementById('modalJobTitle').textContent = jobTitle;
        document.getElementById('modalJobDescription').textContent = jobOverview;
        document.getElementById('modalSalaryRange').textContent =
            '$' + minSalary.toLocaleString() + ' — $' + maxSalary.toLocaleString() + ' (Estimated)';


        document.getElementById('jobIdInput').value = jobId;

        modal.style.display = 'block';
    }


    function closeJobModal() {
        var modal = document.getElementById('jobModal');
        modal.style.display = 'none';
    }
    window.onclick = function(event) {
        var modal = document.getElementById('jobModal');
        if (event.target == modal) {
            closeJobModal();
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
    @if (TempData["Message"] != null)
    {
        <text>
        showToast('@TempData["Message"]');
        </text>
    }
    });

      function showToast(message, title = "Success") {
        const toast = document.getElementById('toast');
        const toastMsg = document.getElementById('toast-message');
        const toastTitle = document.getElementById('toast-title');
        toastMsg.textContent = message;
        toastTitle.textContent = title;
        toast.classList.remove('hidden');
        toast.classList.add('show');
        setTimeout(() => {
            hideToast();
        }, 3000);
    }

    function hideToast() {
        const toast = document.getElementById('toast');
        toast.classList.remove('show');
        toast.classList.add('hidden');
    }

    // Check for TempData message from backend
    window.addEventListener('DOMContentLoaded', () => {
        const message = '@TempData["Message"]';
        if (message && message !== '') {
            showToast(message);
        }
    });
</script>
<script src="~/js/transitions.js"></script>